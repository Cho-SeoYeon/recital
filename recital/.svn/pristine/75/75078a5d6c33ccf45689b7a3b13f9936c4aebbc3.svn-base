package kr.or.ddit.controller.admin;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.service.admin.inter.IAdminLicenseService;
import kr.or.ddit.vo.LicenseVO;
import kr.or.ddit.vo.PaginationInfoVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/admin")
public class AdminLicenseController {
	

	@Inject
	private IAdminLicenseService licenseService;
	
	
	// 자격증 신청 목록 조회
    @RequestMapping(value = "/licenseRequestList", method = RequestMethod.GET)
    public String licenseRequestList(
            @RequestParam(name = "page", required = false, defaultValue = "1") int currentPage,
            @RequestParam(required = false, defaultValue = "99") String searchType,
            @RequestParam(required = false) String searchStuId,
            @RequestParam(required = false) String searchDept,
            @RequestParam(required = false) String searchStuName,
            @RequestParam(required = false, defaultValue = "99") String searchStatus, Model model) {
        log.info("licenseRequestList()...! 자격증 신청 리스트 출력입니다.");

        PaginationInfoVO<LicenseVO> pagingVO = new PaginationInfoVO<>();

        pagingVO.setCurrentPage(currentPage);
        pagingVO.setSearchType(searchType); 		// 자격증 종류로 필터링
        pagingVO.setSearchDept(searchDept); 		// 학과로 필터링
        pagingVO.setSearchStatus(searchStatus); 	// 처리 상태로 필터링
        pagingVO.setSearchStuId(searchStuId); 		// 학번으로 검색
        pagingVO.setSearchStuName(searchStuName); 	// 이름으로 검색

        // 총 게시글 수를 얻어온다.
        int totalRecord = licenseService.selectLicenseRequestCount(pagingVO);

        // 총 게시글 수 전달 후, 총 페이지 수를 설정
        pagingVO.setTotalRecord(totalRecord);
        List<LicenseVO> dataList = licenseService.selectLicenseRequestList(pagingVO);
        log.info("pagingVO searchType >> " + pagingVO.getSearchType());
        for (LicenseVO d : dataList)
            log.info("dataList >> " + d.toString());
        pagingVO.setDataList(dataList);

        model.addAttribute("pagingVO", pagingVO);
        model.addAttribute("page", currentPage);
        model.addAttribute("searchType", searchType);
        model.addAttribute("searchDept", searchDept);
        model.addAttribute("searchStatus", searchStatus);
        model.addAttribute("searchStuId", searchStuId);
        model.addAttribute("searchStuName", searchStuName);

        return "sum/admin/license/licenseRequestList";
    
    
    }
	
	
}
